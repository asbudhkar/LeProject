============== Encoder ==============
Sequential(
  (0): Conv2d(3, 12, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(12, 24, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Conv2d(24, 48, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (5): ReLU()
  (6): Conv2d(48, 96, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): ReLU()
)
============== Decoder ==============
Sequential(
  (0): ConvTranspose2d(96, 48, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): ConvTranspose2d(48, 24, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): ConvTranspose2d(24, 12, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (5): ReLU()
  (6): ConvTranspose2d(12, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (7): Sigmoid()
)

Traceback (most recent call last):
  File "/Users/Caetius/Desktop/LeProject/DAE/pretrain.py", line 115, in <module>
    main()
  File "/Users/Caetius/Desktop/LeProject/DAE/pretrain.py", line 66, in main
    noised = corrupt_input(args.corr_type, inputs, args.perc_noise)
  File "/Users/Caetius/Desktop/LeProject/DAE/noise.py", line 13, in corrupt_input
    x_corrupted = gaussian_noise(data, 0, v)
  File "/Users/Caetius/Desktop/LeProject/DAE/noise.py", line 48, in gaussian_noise
    return torch.clamp(torch.add(X,noise))
RuntimeError: At least one of 'min' or 'max' must not be None
